/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edusys.ui;

import com.edusys.dao.KhoaHocDAO;
import com.edusys.dao.ThongKeDAO;
import com.edusys.entity.KhoaHoc;
import com.edusys.utils.Auth;
import com.edusys.utils.XImage;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileOutputStream;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author HMD
 */
public class ThongKeJDialog extends javax.swing.JDialog {

    /**
     * Creates new form QuanLyJDialog
     */
    public ThongKeJDialog(java.awt.Frame parent, boolean modal, int index) {
        super(parent, modal);
        initComponents();
        init();
        this.selectTab(index);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField10 = new javax.swing.JTextField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        cboKhoaHoc = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBangDiem = new javax.swing.JTable();
        btnXuatBC1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        tblNguoiHoc = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDiemChuyenDe = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblDoanhThu = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        cboNam = new javax.swing.JComboBox();
        btnXuatBC4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        jTextField10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("KHÓA HỌC");

        cboKhoaHoc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboKhoaHoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tblBangDiem.setAutoCreateRowSorter(true);
        tblBangDiem.setBackground(new java.awt.Color(67, 221, 236));
        tblBangDiem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblBangDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MÃ NH", "HỌ VÀ TÊN", "ĐIỂM", "XẾP LOẠI"
            }
        ));
        jScrollPane2.setViewportView(tblBangDiem);

        btnXuatBC1.setBackground(new java.awt.Color(0, 255, 102));
        btnXuatBC1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXuatBC1.setText("Xuất báo cáo");
        btnXuatBC1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatBC1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(cboKhoaHoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnXuatBC1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cboKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXuatBC1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("BẢNG ĐIỂM", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        tblNguoiHoc.setBackground(new java.awt.Color(67, 221, 236));
        tblNguoiHoc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblNguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "NĂM", "SỐ NH", "ĐK SỚM NHẤT", "ĐK MUỘN NHÂT"
            }
        ));
        jScrollPane.setViewportView(tblNguoiHoc);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        tabs.addTab("NGƯỜI HỌC", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 204, 204));

        tblDiemChuyenDe.setBackground(new java.awt.Color(67, 221, 236));
        tblDiemChuyenDe.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblDiemChuyenDe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "CHUYÊN ĐỀ", "SL HV", "ĐIỂM TN", "ĐIỂM CN", "ĐIỂM TB"
            }
        ));
        jScrollPane3.setViewportView(tblDiemChuyenDe);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        tabs.addTab("ĐIỂM CHUYÊN ĐỀ", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 204, 204));

        tblDoanhThu.setBackground(new java.awt.Color(67, 221, 236));
        tblDoanhThu.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblDoanhThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "CHUYÊN ĐỀ", "SỐ KH", "SỐ HV", "DOANH THU", "HP-TN", "HP-CN", "HP-TB"
            }
        ));
        jScrollPane4.setViewportView(tblDoanhThu);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("NĂM");

        cboNam.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboNam.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnXuatBC4.setBackground(new java.awt.Color(0, 255, 102));
        btnXuatBC4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXuatBC4.setText("Xuất báo cáo");
        btnXuatBC4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatBC4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(cboNam, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addContainerGap(436, Short.MAX_VALUE)
                    .addComponent(btnXuatBC4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addContainerGap(444, Short.MAX_VALUE)
                    .addComponent(btnXuatBC4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        tabs.addTab("DOANH THU", jPanel4);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 204));
        jLabel4.setText("TỔNG HỢP THỐNG KÊ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXuatBC1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatBC1ActionPerformed
        xuatFile1();
    }//GEN-LAST:event_btnXuatBC1ActionPerformed

    private void btnXuatBC4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatBC4ActionPerformed
        xuatFile4();
    }//GEN-LAST:event_btnXuatBC4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                int index = 0;
                ThongKeJDialog dialog = new ThongKeJDialog(new javax.swing.JFrame(), true, index);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnXuatBC1;
    private javax.swing.JButton btnXuatBC4;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cboKhoaHoc;
    private javax.swing.JComboBox cboNam;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblBangDiem;
    private javax.swing.JTable tblDiemChuyenDe;
    private javax.swing.JTable tblDoanhThu;
    private javax.swing.JTable tblNguoiHoc;
    // End of variables declaration//GEN-END:variables

    ThongKeDAO tkdao = new ThongKeDAO();
    KhoaHocDAO khdao = new KhoaHocDAO();

    private void init() {
        this.setIconImage(XImage.getAppIcon());
        this.setTitle("TỔNG HỢP THỐNG KÊ");
        this.setLocationRelativeTo(null);
        Color col = new Color(255, 168, 168);
        this.getContentPane().setBackground(col);

        this.columnWidth();
        this.fillComboBoxKhoaHoc();
        this.fillTableBangDiem();
        this.fillTableNguoiHoc();
        this.fillTableDiemChuyenDe();
        this.fillComboBoxNam();
        this.fillTableDoanhThu();

        if (!Auth.isManager()) {
            tabs.remove(3);
        }

        cboKhoaHoc.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                fillTableBangDiem();
            }
        });

        cboNam.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                fillTableDoanhThu();
            }
        });
    }

    void columnWidth() {
        tblBangDiem.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblBangDiem.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblBangDiem.getColumnModel().getColumn(1).setPreferredWidth(250);
        tblBangDiem.getColumnModel().getColumn(2).setPreferredWidth(50);
        tblBangDiem.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);

        tblNguoiHoc.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblNguoiHoc.getColumnModel().getColumn(0).setPreferredWidth(60);
        tblNguoiHoc.getColumnModel().getColumn(1).setPreferredWidth(60);
        tblNguoiHoc.getColumnModel().getColumn(2).setPreferredWidth(100);
        tblNguoiHoc.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);

        tblDiemChuyenDe.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblDiemChuyenDe.getColumnModel().getColumn(0).setPreferredWidth(220);
        tblDiemChuyenDe.getColumnModel().getColumn(1).setPreferredWidth(60);
        tblDiemChuyenDe.getColumnModel().getColumn(2).setPreferredWidth(60);
        tblDiemChuyenDe.getColumnModel().getColumn(3).setPreferredWidth(60);
        tblDiemChuyenDe.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);

        tblDoanhThu.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblDoanhThu.getColumnModel().getColumn(0).setPreferredWidth(190);
        tblDoanhThu.getColumnModel().getColumn(1).setPreferredWidth(30);
        tblDoanhThu.getColumnModel().getColumn(2).setPreferredWidth(30);
        tblDoanhThu.getColumnModel().getColumn(3).setPreferredWidth(60);
        tblDoanhThu.getColumnModel().getColumn(4).setPreferredWidth(30);
        tblDoanhThu.getColumnModel().getColumn(5).setPreferredWidth(30);
        tblDoanhThu.getColumnModel().getColumn(6).setPreferredWidth(30);
        tblDoanhThu.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
    }

    public void selectTab(int index) {
        tabs.setSelectedIndex(index);
    }

    void fillComboBoxKhoaHoc() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboKhoaHoc.getModel();
        model.removeAllElements();
        List<KhoaHoc> list = khdao.selectAll();
        for (KhoaHoc kh : list) {
            model.addElement(kh);
        }
    }

    void fillTableBangDiem() {
        DefaultTableModel model = (DefaultTableModel) tblBangDiem.getModel();
        model.setRowCount(0);
        KhoaHoc kh = (KhoaHoc) cboKhoaHoc.getSelectedItem();
        List<Object[]> list = tkdao.getBangDiem(kh.getMaKH());
        for (Object[] row : list) {
            double diem = (double) row[2];
            model.addRow(new Object[]{row[0], row[1], diem, getXepLoai(diem)});
        }
    }

    String getXepLoai(double diem) {
        if (diem < 5) {
            return "Chưa đạt";
        }
        if (diem < 6.5) {
            return "Trung bình";
        }
        if (diem < 7.5) {
            return "Khá";
        }
        if (diem < 9) {
            return "Giỏi";
        }
        return "Xuất sắc";
    }

    void fillTableNguoiHoc() {
        DefaultTableModel model = (DefaultTableModel) tblNguoiHoc.getModel();
        model.setRowCount(0);
        List<Object[]> list = tkdao.getLuongNguoiHoc();
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    void fillTableDiemChuyenDe() {
        DefaultTableModel model = (DefaultTableModel) tblDiemChuyenDe.getModel();
        model.setRowCount(0);
        List<Object[]> list = tkdao.getDiemChuyenDe();
        for (Object[] row : list) {
            model.addRow(new Object[]{row[0], row[1], row[2], row[3], row[4].toString().substring(0, 3)});
        }
    }

    void fillComboBoxNam() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNam.getModel();
        model.removeAllElements();
        List<Integer> list = khdao.selectYears();
        for (Integer year : list) {
            model.addElement(year);
        }
    }

    void fillTableDoanhThu() {
        DefaultTableModel model = (DefaultTableModel) tblDoanhThu.getModel();
        model.setRowCount(0);
        int nam = (Integer) cboNam.getSelectedItem();
        List<Object[]> list = tkdao.getDoanhThu(nam);
        for (Object[] row : list) {
            model.addRow(new Object[]{row[0], row[1], row[2], row[3], row[4], row[5], row[6].toString().substring(0, 5)});
        }
    }

    void xuatFile1() {
        FileOutputStream fos = null;
        try {
            KhoaHoc kh = (KhoaHoc) cboKhoaHoc.getSelectedItem();
            List<Object[]> list = tkdao.getBangDiem(kh.getMaKH());

            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet(kh.toString());
            XSSFRow row = null;
            Cell cell = null;

            //meger title
            sheet.addMergedRegion(new CellRangeAddress(0, 1, 0, 3));

            //create CellStyle
            CellStyle cellStyle = createStyleForHeader(sheet);
            CellStyle cellStyle2 = createStyleForTittle(sheet);

            row = sheet.createRow(0);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellStyle(cellStyle2);
            cell.setCellValue("BẢNG ĐIỂM");

            //create column headings
            row = sheet.createRow(2);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellStyle(cellStyle);
            cell.setCellValue(" MÃ NH ");

            cell = row.createCell(1, CellType.STRING);
            cell.setCellStyle(cellStyle);
            cell.setCellValue(" HỌ VÀ TÊN                        ");

            cell = row.createCell(2, CellType.NUMERIC);
            cell.setCellStyle(cellStyle);
            cell.setCellValue(" ĐIỂM ");

            cell = row.createCell(3, CellType.STRING);
            cell.setCellStyle(cellStyle);
            cell.setCellValue(" XẾP LOẠI ");

            //Auto resize column width
            int numberOfColumn = sheet.getRow(2).getPhysicalNumberOfCells();
            autosizeColumn(sheet, numberOfColumn);

            if (list != null) {
                int i = -1;
                for (Object[] row2 : list) {
                    i++;
                    row = sheet.createRow(3 + i);

                    cell = row.createCell(0, CellType.STRING);
                    cell.setCellValue((String) row2[0]);

                    cell = row.createCell(1, CellType.STRING);
                    cell.setCellValue((String) row2[1]);

                    cell = row.createCell(2, CellType.NUMERIC);
                    cell.setCellValue((double) row2[2]);

                    cell = row.createCell(3, CellType.STRING);
                    cell.setCellValue(getXepLoai((double) row2[2]));
                }
            }
            File f = new File("E:/DAM/Diem_theo_chuyen_de.xlsx");
            fos = new FileOutputStream(f);
            workbook.write(fos);
            fos.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    void xuatFile4() {
        FileOutputStream fos = null;
        try {
            int nam = (Integer) cboNam.getSelectedItem();
            List<Object[]> list = tkdao.getDoanhThu(nam);

            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet(String.valueOf(nam));
            XSSFRow row = null;
            Cell cell = null;

            //meger title
            sheet.addMergedRegion(new CellRangeAddress(0, 1, 0, 6));

            //create CellStyle
            CellStyle cellStyle = createStyleForHeader(sheet);
            CellStyle cellStyle2 = createStyleForTittle(sheet);

            row = sheet.createRow(0);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellStyle(cellStyle2);
            cell.setCellValue("DOANH THU");

            //create column headings
            row = sheet.createRow(2);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellStyle(cellStyle);
            cell.setCellValue(" CHUYÊN ĐỀ                                                ");

            cell = row.createCell(1, CellType.STRING);
            cell.setCellStyle(cellStyle);
            cell.setCellValue(" SỐ KHÓA HỌC ");

            cell = row.createCell(2, CellType.STRING);
            cell.setCellStyle(cellStyle);
            cell.setCellValue(" SỐ HỌC VIÊN ");

            cell = row.createCell(3, CellType.STRING);
            cell.setCellStyle(cellStyle);
            cell.setCellValue(" DOANH THU      ");

            cell = row.createCell(4, CellType.STRING);
            cell.setCellStyle(cellStyle);
            cell.setCellValue(" HỌC PHÍ TN ");

            cell = row.createCell(5, CellType.STRING);
            cell.setCellStyle(cellStyle);
            cell.setCellValue(" HỌC PHÍ CN ");

            cell = row.createCell(6, CellType.STRING);
            cell.setCellStyle(cellStyle);
            cell.setCellValue(" HỌC PHÍ TB ");

            //Auto resize column width
            int numberOfColumn = sheet.getRow(2).getPhysicalNumberOfCells();
            autosizeColumn(sheet, numberOfColumn);

            if (list != null) {
                int i = -1;
                for (Object[] row2 : list) {
                    i++;
                    row = sheet.createRow(3 + i);

                    cell = row.createCell(0, CellType.STRING);
                    cell.setCellValue((String) row2[0]);

                    cell = row.createCell(1, CellType.NUMERIC);
                    cell.setCellValue((int) row2[1]);

                    cell = row.createCell(2, CellType.NUMERIC);
                    cell.setCellValue((int) row2[2]);

                    cell = row.createCell(3, CellType.NUMERIC);
                    cell.setCellValue((double) row2[3]);

                    cell = row.createCell(4, CellType.NUMERIC);
                    cell.setCellValue((double) row2[4]);

                    cell = row.createCell(5, CellType.NUMERIC);
                    cell.setCellValue((double) row2[5]);

                    cell = row.createCell(6, CellType.NUMERIC);
                    cell.setCellValue((double) row2[6]);
                }
            }
            File f = new File("E:/DAM/Doanh_thu_theo_chuyen_de.xlsx");
            fos = new FileOutputStream(f);
            workbook.write(fos);
            fos.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    void autosizeColumn(Sheet sheet, int lastColumn) {
        for (int columnIndex = 0; columnIndex < lastColumn; columnIndex++) {
            sheet.autoSizeColumn(columnIndex);
        }
    }

    private static CellStyle createStyleForHeader(Sheet sheet) {
        // Create font
        Font font = sheet.getWorkbook().createFont();
        font.setFontName("Calibri");
        font.setBold(true);
        font.setFontHeightInPoints((short) 12); // font size
        font.setColor(IndexedColors.WHITE.getIndex()); // text color

        // Create CellStyle
        CellStyle cellStyle = sheet.getWorkbook().createCellStyle();
        cellStyle.setFont(font);
        cellStyle.setFillForegroundColor(IndexedColors.GREEN.getIndex());
        cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        cellStyle.setBorderBottom(BorderStyle.THIN);
        return cellStyle;
    }

    private static CellStyle createStyleForTittle(Sheet sheet) {
        // Create font
        Font font = sheet.getWorkbook().createFont();
        font.setFontName("Calibri");
        font.setBold(true);
        font.setFontHeightInPoints((short) 20); // font size
        font.setColor(IndexedColors.BLACK.getIndex()); // text color

        // Create CellStyle
        CellStyle cellStyle = sheet.getWorkbook().createCellStyle();
        cellStyle.setFont(font);
        cellStyle.setAlignment(HorizontalAlignment.CENTER);
        cellStyle.setFillForegroundColor(IndexedColors.GREY_25_PERCENT.getIndex());
        cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        cellStyle.setBorderBottom(BorderStyle.THIN);
        return cellStyle;
    }

}
